{"ast":null,"code":"var _jsxFileName = \"/home/ndeveher/my-app/src/components/ConfirmErrByShip.js\";\nimport React, { Component } from 'react';\n\nclass ConfirmErrByShip extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const hash = this.state.hash;\n\n      if (hash === \"\") {\n        this.setState({\n          errorMessage: \"Please enter hash!!\"\n        });\n      } else {\n        try {\n          const accounts = await web3.eth.getAccounts();\n          await config.methods.ConfirmOfBuyer(this.state.hash).send({\n            from: accounts[1]\n          }); // await config2.methods.ConFirmOfSeller(hash).call({from: accounts[0]});\n\n          this.setState({\n            errorMessage: \"success!!\"\n          });\n        } catch (err) {\n          this.setState({\n            errorMessage: err.message\n          });\n        }\n\n        this.setState({\n          loading: false\n        });\n      }\n\n      this.setState({\n        hash: \"\"\n      });\n    };\n\n    this.onSubmit2 = async event => {\n      event.preventDefault();\n      const hash = this.state.hash;\n\n      if (hash === \"\") {\n        this.setState({\n          errorMessage: \"Please enter hash!!\"\n        });\n      } else {\n        try {\n          const accounts = await web3.eth.getAccounts();\n          await config2.methods.ConFirmOfSeller(this.state.hash).send({\n            from: accounts[0]\n          }); // await config2.methods.ConFirmOfSeller(hash).call({from: accounts[0]});\n\n          this.setState({\n            errorMessage: \"success!!\"\n          });\n        } catch (err) {\n          this.setState({\n            errorMessage: err.message\n          });\n        }\n\n        this.setState({\n          loading: false\n        });\n      }\n\n      this.setState({\n        hash: \"\"\n      });\n    };\n\n    this.state = {\n      hash: \"\",\n      errorMessage: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const hash = await config2.methods.hash().call();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"from-creat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Buyer callback money:\"), React.createElement(Input, {\n      onChange: event => this.setState({\n        hash: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Button, {\n      primary: true,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"confirm\"))), React.createElement(\"div\", {\n      class: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit2,\n      error: !!this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Seller callback money:\"), React.createElement(Input, {\n      onChange: event => this.setState({\n        hash: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Button, {\n      primary: true,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"confirm\"))), React.createElement(\"div\", {\n      className: \"ui positive message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.errorMessage)))));\n  }\n\n}\n\nexport default ConfirmErrByShip;","map":{"version":3,"sources":["/home/ndeveher/my-app/src/components/ConfirmErrByShip.js"],"names":["React","Component","ConfirmErrByShip","constructor","props","onSubmit","event","preventDefault","hash","state","setState","errorMessage","accounts","web3","eth","getAccounts","config","methods","ConfirmOfBuyer","send","from","err","message","loading","onSubmit2","config2","ConFirmOfSeller","componentDidMount","call","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ConfirmErrByShip extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          hash: \"\",\n          errorMessage: \"\"\n        };\n      }\n    \n      async componentDidMount() {\n        const hash = await config2.methods.hash().call();\n      }\n      onSubmit = async event => {\n        event.preventDefault();\n        const { hash } = this.state;\n        if (hash === \"\") {\n          this.setState({\n            errorMessage: \"Please enter hash!!\"\n          });\n        } else {\n          try {\n            const accounts = await web3.eth.getAccounts();\n            await config.methods.ConfirmOfBuyer(this.state.hash).send({\n              from: accounts[1]\n            });\n            // await config2.methods.ConFirmOfSeller(hash).call({from: accounts[0]});\n            this.setState({\n              errorMessage: \"success!!\"\n            });\n          } catch (err) {\n            this.setState({ errorMessage: err.message });\n          }\n          this.setState({ loading: false });\n        }\n        this.setState({\n          hash: \"\"\n        });\n      };\n      onSubmit2 = async event => {\n        event.preventDefault();\n        const { hash } = this.state;\n        if (hash === \"\") {\n          this.setState({\n            errorMessage: \"Please enter hash!!\"\n          });\n        } else {\n          try {\n            const accounts = await web3.eth.getAccounts();\n            await config2.methods.ConFirmOfSeller(this.state.hash).send({\n              from: accounts[0]\n            });\n            // await config2.methods.ConFirmOfSeller(hash).call({from: accounts[0]});\n            this.setState({\n              errorMessage: \"success!!\"\n            });\n          } catch (err) {\n            this.setState({ errorMessage: err.message });\n          }\n          this.setState({ loading: false });\n        }\n        this.setState({\n          hash: \"\"\n        });\n      };\n      render() {\n        return (\n          <div className=\"main\">\n            <div className=\"from-creat\">\n              <div className=\"form\">\n                <div class=\"ui segment\">\n                  <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                      <label>Buyer callback money:</label>\n                      <Input\n                      \n                        onChange={event =>\n                          this.setState({ hash: event.target.value })\n                        }\n                      />\n                    </Form.Field>\n                    <Button primary loading={this.state.loading}>\n                      confirm\n                    </Button>\n                  </Form>\n                </div>\n                <div class=\"ui segment\">\n                  <Form onSubmit={this.onSubmit2} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                      <label>Seller callback money:</label>\n                      <Input\n                      \n                        onChange={event =>\n                          this.setState({ hash: event.target.value })\n                        }\n                      />\n                    </Form.Field>\n                    <Button primary loading={this.state.loading}>\n                      confirm\n                    </Button>\n                  </Form>\n                </div>\n                <div className=\"ui positive message\">\n                  <div className=\"header\">Message</div>\n                  <p>{this.state.errorMessage}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\nexport default ConfirmErrByShip;"]},"metadata":{},"sourceType":"module"}